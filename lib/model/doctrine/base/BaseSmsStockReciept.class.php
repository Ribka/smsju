<?php

/**
 * BaseSmsStockReciept
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $recived_number
 * @property integer $item_id
 * @property string $rf_id
 * @property string $cust_id
 * @property string $reciever_stockeper_id
 * @property integer $quantity
 * @property float $unite_price
 * @property float $total_price
 * @property string $description
 * @property SmsItem $SmsItem
 * @property Doctrine_Collection $SmsIssue
 * 
 * @method string              getRecivedNumber()         Returns the current record's "recived_number" value
 * @method integer             getItemId()                Returns the current record's "item_id" value
 * @method string              getRfId()                  Returns the current record's "rf_id" value
 * @method string              getCustId()                Returns the current record's "cust_id" value
 * @method string              getRecieverStockeperId()   Returns the current record's "reciever_stockeper_id" value
 * @method integer             getQuantity()              Returns the current record's "quantity" value
 * @method float               getUnitePrice()            Returns the current record's "unite_price" value
 * @method float               getTotalPrice()            Returns the current record's "total_price" value
 * @method string              getDescription()           Returns the current record's "description" value
 * @method SmsItem             getSmsItem()               Returns the current record's "SmsItem" value
 * @method Doctrine_Collection getSmsIssue()              Returns the current record's "SmsIssue" collection
 * @method SmsStockReciept     setRecivedNumber()         Sets the current record's "recived_number" value
 * @method SmsStockReciept     setItemId()                Sets the current record's "item_id" value
 * @method SmsStockReciept     setRfId()                  Sets the current record's "rf_id" value
 * @method SmsStockReciept     setCustId()                Sets the current record's "cust_id" value
 * @method SmsStockReciept     setRecieverStockeperId()   Sets the current record's "reciever_stockeper_id" value
 * @method SmsStockReciept     setQuantity()              Sets the current record's "quantity" value
 * @method SmsStockReciept     setUnitePrice()            Sets the current record's "unite_price" value
 * @method SmsStockReciept     setTotalPrice()            Sets the current record's "total_price" value
 * @method SmsStockReciept     setDescription()           Sets the current record's "description" value
 * @method SmsStockReciept     setSmsItem()               Sets the current record's "SmsItem" value
 * @method SmsStockReciept     setSmsIssue()              Sets the current record's "SmsIssue" collection
 * 
 * @package    sms
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSmsStockReciept extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sms_stock_reciept');
        $this->hasColumn('recived_number', 'string', 250, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 250,
             ));
        $this->hasColumn('item_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('rf_id', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('cust_id', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('reciever_stockeper_id', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('quantity', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('unite_price', 'float', null, array(
             'type' => 'float',
             'notnull' => true,
             ));
        $this->hasColumn('total_price', 'float', null, array(
             'type' => 'float',
             'notnull' => true,
             ));
        $this->hasColumn('description', 'string', 400, array(
             'type' => 'string',
             'length' => 400,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('SmsItem', array(
             'local' => 'item_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('SmsIssue', array(
             'local' => 'id',
             'foreign' => 'reciept_referrence_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}