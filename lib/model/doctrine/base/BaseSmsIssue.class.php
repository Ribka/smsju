<?php

/**
 * BaseSmsIssue
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $exit_number
 * @property string $issue_type
 * @property integer $item_id
 * @property integer $reciept_referrence_id
 * @property string $serial_number
 * @property string $storekeeper_id
 * @property string $borrower_id
 * @property string $quantity
 * @property string $description
 * @property SmsItem $SmsItem
 * @property SmsStockReciept $SmsStockReciept
 * @property Doctrine_Collection $SmsReturn
 * 
 * @method string              getExitNumber()            Returns the current record's "exit_number" value
 * @method string              getIssueType()             Returns the current record's "issue_type" value
 * @method integer             getItemId()                Returns the current record's "item_id" value
 * @method integer             getRecieptReferrenceId()   Returns the current record's "reciept_referrence_id" value
 * @method string              getSerialNumber()          Returns the current record's "serial_number" value
 * @method string              getStorekeeperId()         Returns the current record's "storekeeper_id" value
 * @method string              getBorrowerId()            Returns the current record's "borrower_id" value
 * @method string              getQuantity()              Returns the current record's "quantity" value
 * @method string              getDescription()           Returns the current record's "description" value
 * @method SmsItem             getSmsItem()               Returns the current record's "SmsItem" value
 * @method SmsStockReciept     getSmsStockReciept()       Returns the current record's "SmsStockReciept" value
 * @method Doctrine_Collection getSmsReturn()             Returns the current record's "SmsReturn" collection
 * @method SmsIssue            setExitNumber()            Sets the current record's "exit_number" value
 * @method SmsIssue            setIssueType()             Sets the current record's "issue_type" value
 * @method SmsIssue            setItemId()                Sets the current record's "item_id" value
 * @method SmsIssue            setRecieptReferrenceId()   Sets the current record's "reciept_referrence_id" value
 * @method SmsIssue            setSerialNumber()          Sets the current record's "serial_number" value
 * @method SmsIssue            setStorekeeperId()         Sets the current record's "storekeeper_id" value
 * @method SmsIssue            setBorrowerId()            Sets the current record's "borrower_id" value
 * @method SmsIssue            setQuantity()              Sets the current record's "quantity" value
 * @method SmsIssue            setDescription()           Sets the current record's "description" value
 * @method SmsIssue            setSmsItem()               Sets the current record's "SmsItem" value
 * @method SmsIssue            setSmsStockReciept()       Sets the current record's "SmsStockReciept" value
 * @method SmsIssue            setSmsReturn()             Sets the current record's "SmsReturn" collection
 * 
 * @package    sms
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSmsIssue extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sms_issue');
        $this->hasColumn('exit_number', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('issue_type', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('item_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('reciept_referrence_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('serial_number', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('storekeeper_id', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('borrower_id', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('quantity', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('SmsItem', array(
             'local' => 'item_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('SmsStockReciept', array(
             'local' => 'reciept_referrence_id',
             'foreign' => 'id',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('SmsReturn', array(
             'local' => 'id',
             'foreign' => 'exit_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}